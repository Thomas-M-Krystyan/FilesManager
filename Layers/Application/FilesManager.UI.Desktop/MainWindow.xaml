<Window xaml:Class="FilesManager.UI.Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:data="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:xaml="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:markup="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:customBehaviors="clr-namespace:FilesManager.UI.Desktop.Behaviors"
        xmlns:layer="clr-namespace:FilesManager.UI.Desktop.ViewModels.Layers.Specific"
        xmlns:root="clr-namespace:FilesManager.UI.Desktop.ViewModels.Layers.Root"
        xmlns:renaming="clr-namespace:FilesManager.UI.Desktop.ViewModels.Layers.Specific.Renaming"
        data:DataContext="{data:DesignInstance Type=root:MainWindowViewModel}"
        markup:Ignorable="data"

        Title="{xaml:Static root:MainWindowViewModel.WindowTitle}"

        Background="LightGray"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanMinimize">  <!-- NOTE: Enable minimize / maximize buttons -->

    <!-- RESOURCES -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Dictionaries/CommonDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <!-- CONTENT -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="{StaticResource SeparatorWidth}"/>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- ################################# -->
        <!-- ###  LEFT PART OF THE SCREEN  ### -->
        <!-- ################################# -->

        <!-- List of loaded files -->
        <ListBox Grid.Column="0"
                 Grid.Row="0"
                 Height="400"
                 Width="300"
                 Margin="{StaticResource LeftPartMargin}"
                 ItemsSource="{Binding Files, Mode=OneWay}"
                 ToolTip="{xaml:Static root:MainWindowViewModel.FilesList_Tooltip}"
                 Style="{StaticResource ControlWithResponsiveToolTips}"
                 AllowDrop="True" data:ItemsSource="{data:SampleData ItemCount=5}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding DisplayName, Mode=OneWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="Drop">
                    <customBehaviors:InvokeCommandAction Command="{Binding LoadFilesCommand, Mode=OneWay}" />
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </ListBox>

        <!-- ################################## -->
        <!-- ###  RIGHT PART OF THE SCREEN  ### -->
        <!-- ################################## -->
        <Grid Grid.Column="2"
              Grid.Row="0"
              Margin="0,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <!-- Layer buttons -->
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{StaticResource SeparatorWidth}" />
                <!-- Controls -->
                <RowDefinition />  <!-- Fill to the bottom of the window -->
            </Grid.RowDefinitions>

            <!-- Layer buttons (controlling layers) -->
            <Grid Grid.Column="0"
                  Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />  <!-- Fill to the end of the nav bar -->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Renaming mode -->
                <Button Grid.Column="0"
                        Grid.Row="0"
                        Content="{xaml:Static layer:ActiveLayerViewModel.Layer_RenamingButton_Header}"
                        ToolTip="{xaml:Static layer:ActiveLayerViewModel.Layer_RenamingButton_Tooltip}"
                        Style="{StaticResource LeftLayerButtonStyle}">
                </Button>

                <!-- Converting mode -->
                <Button Grid.Column="1"
                        Grid.Row="0"
                        Content="{xaml:Static layer:ActiveLayerViewModel.Layer_ConvertingButton_Header}"
                        ToolTip="{xaml:Static layer:ActiveLayerViewModel.Layer_ConvertingButton_Tooltip}"
                        Style="{StaticResource MiddleLayerButtonStyle}">
                </Button>

                <!-- Validating mode -->
                <Button Grid.Column="2"
                        Grid.Row="0"
                        Content="{xaml:Static layer:ActiveLayerViewModel.Layer_ValidatingButton_Header}"
                        ToolTip="{xaml:Static layer:ActiveLayerViewModel.Layer_ValidatingButton_Tooltip}"
                        Style="{StaticResource RightLayerButtonStyle}">
                </Button>
            </Grid>

            <!-- Controls (depends on the layer) -->
            <Grid Grid.Column="0"
                  Grid.Row="2"
                  Visibility="Visible">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <!-- Strategy #1 -->
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{StaticResource SeparatorWidth}" />
                    <!-- Strategies #2 + #3 -->
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{StaticResource SeparatorWidth}" />
                    <!-- Buttons -->
                    <RowDefinition />  <!-- Push action buttons to the bottom -->
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Strategy #1: Increment number -->
                <Border Grid.Column="0"
                        Grid.Row="0"
                        DataContext="{Binding IncrementNumberStrategy, Mode=OneTime}"
                        Style="{StaticResource BorderStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <Label Grid.Column="0" Grid.ColumnSpan="5"
                               Grid.Row="0"
                               Content="{xaml:Static renaming:IncrementNumberViewModel.Method_Header}"
                               ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Method_Tooltip}"
                               Style="{StaticResource HeaderStyle}" />

                        <!-- Controls -->
                        <RadioButton Grid.Column="0"
                                     Grid.Row="1"
                                     IsChecked="{Binding IsEnabled, Mode=OneWay}"
                                     ToolTip="{xaml:Static renaming:IncrementNumberViewModel.RadioButton_Tooltip}"
                                     Style="{StaticResource RadioButtonStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>

                        <Label Grid.Column="1"
                               Grid.Row="1"
                               Content="{xaml:Static renaming:IncrementNumberViewModel.Prefix_Label}"
                               ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Prefix_Tooltip}"
                               Style="{StaticResource LabelStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Label>
                        <TextBox Grid.Column="2"
                                 Grid.Row="1"
                                 Text="{Binding NamePrefix, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Content_NonEmptyField_Tooltip}"
                                 Style="{StaticResource TextBoxStyle_140}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="GotFocus">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </TextBox>

                        <Label Grid.Column="3"
                               Grid.Row="1"
                               Content="{xaml:Static renaming:IncrementNumberViewModel.StartNumber_Label}"
                               ToolTip="{xaml:Static renaming:IncrementNumberViewModel.StartNumber_Tooltip}"
                               Style="{StaticResource LabelStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Label>
                        <TextBox Grid.Column="4"
                                 Grid.Row="1"
                                 Text="{Binding StartingNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Content_OnlyPositives_Tooltip}"
                                 Style="{StaticResource TextBoxStyle_80}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="GotFocus">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </TextBox>

                        <Label Grid.Column="5"
                               Grid.Row="1"
                               Content="{xaml:Static renaming:IncrementNumberViewModel.Postfix_Label}"
                               ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Postfix_Tooltip}"
                               Style="{StaticResource LabelStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Label>
                        <TextBox Grid.Column="6"
                                 Grid.Row="1"
                                 Text="{Binding NamePostfix, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 ToolTip="{xaml:Static renaming:IncrementNumberViewModel.Content_NonEmptyField_Tooltip}"
                                 Style="{StaticResource TextBoxStyle_140}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="GotFocus">
                                    <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </Border>

                <!-- Strategies #2 + #3 -->
                <Grid Grid.Column="0"
                      Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{StaticResource SeparatorWidth}" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Strategy #2: Prepend / appended -->
                    <Border Grid.Column="0"
                            Grid.Row="0"
                            DataContext="{Binding PrependAppendStrategy, Mode=OneTime}"
                            Style="{StaticResource BorderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <Label Grid.Column="0" Grid.ColumnSpan="5"
                                   Grid.Row="0"
                                   Content="{xaml:Static renaming:PrependAppendViewModel.Method_Header}"
                                   ToolTip="{xaml:Static renaming:PrependAppendViewModel.Method_Tooltip}"
                                   Style="{StaticResource HeaderStyle}" />

                            <!-- Controls -->
                            <RadioButton Grid.Column="0"
                                         Grid.Row="1"
                                         IsChecked="{Binding IsEnabled, Mode=OneWay}"
                                         ToolTip="{xaml:Static renaming:PrependAppendViewModel.RadioButton_Tooltip}"
                                         Style="{StaticResource RadioButtonStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="Checked">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </RadioButton>

                            <Label Grid.Column="1"
                                   Grid.Row="1"
                                   Content="{xaml:Static renaming:PrependAppendViewModel.Prepend_Label}"
                                   ToolTip="{xaml:Static renaming:PrependAppendViewModel.Prepend_Tooltip}"
                                   Style="{StaticResource LabelStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Label>
                            <TextBox Grid.Column="2"
                                     Grid.Row="1"
                                     Text="{Binding PrependName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     ToolTip="{xaml:Static renaming:PrependAppendViewModel.Content_NonEmptyField_Tooltip}"
                                     Style="{StaticResource TextBoxStyle_140}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="GotFocus">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </TextBox>

                            <Label Grid.Column="3"
                                   Grid.Row="1"
                                   Content="{xaml:Static renaming:PrependAppendViewModel.Append_Label}"
                                   ToolTip="{xaml:Static renaming:PrependAppendViewModel.Append_Tooltip}"
                                   Style="{StaticResource LabelStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Label>
                            <TextBox Grid.Column="4"
                                     Grid.Row="1"
                                     Text="{Binding AppendName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     ToolTip="{xaml:Static renaming:PrependAppendViewModel.Content_NonEmptyField_Tooltip}"
                                     Style="{StaticResource TextBoxStyle_140}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="GotFocus">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </TextBox>
                        </Grid>
                    </Border>

                    <!-- Strategy #3: Leading zeros -->
                    <Border Grid.Column="2"
                            Grid.Row="0"
                            DataContext="{Binding LeadingZerosStrategy, Mode=OneTime}"
                            Style="{StaticResource BorderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <Label Grid.Column="0" Grid.ColumnSpan="4"
                                   Grid.Row="0"
                                   Content="{xaml:Static renaming:LeadingZerosViewModel.Method_Header}"
                                   ToolTip="{xaml:Static renaming:LeadingZerosViewModel.Method_Tooltip}"
                                   Style="{StaticResource HeaderStyle}" />

                            <!-- Controls -->
                            <RadioButton Grid.Column="0"
                                         Grid.Row="1"
                                         IsChecked="{Binding IsEnabled, Mode=OneWay}"
                                         ToolTip="{xaml:Static renaming:LeadingZerosViewModel.RadioButton_Tooltip}"
                                         Style="{StaticResource RadioButtonStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="Checked">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </RadioButton>

                            <Label Grid.Column="1"
                                   Grid.Row="1"
                                   Content="{xaml:Static renaming:LeadingZerosViewModel.Set_Label}"
                                   ToolTip="{xaml:Static renaming:LeadingZerosViewModel.Set_Tooltip}"
                                   Style="{StaticResource LabelStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Label>
                            <TextBox Grid.Column="2"
                                     Grid.Row="1"
                                     Text="{Binding LeadingZeros, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     ToolTip="{xaml:Static renaming:LeadingZerosViewModel.Content_OnlyVerySmallPositives_Tooltip}"
                                     Style="{StaticResource TextBoxStyle_62}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="GotFocus">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </TextBox>

                            <CheckBox Grid.Column="3"
                                      Grid.Row="1"
                                      IsEnabled="{Binding IsAbsoluteModeEnabled, Mode=OneWay}"
                                      IsChecked="{Binding IsAbsoluteModeOn, Mode=TwoWay}"
                                      ToolTip="{xaml:Static renaming:LeadingZerosViewModel.ClearZeros_Tooltip}"
                                      Style="{StaticResource CheckboxStyle}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="GotFocus">
                                        <customBehaviors:InvokeCommandAction Command="{Binding SelectCommand, Mode=OneWay}" />
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </CheckBox>
                        </Grid>
                    </Border>
                </Grid>

                <!-- The bottom row -->
                <Grid Grid.Column="0"
                      Grid.Row="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />  <!-- Expand horizontally -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Files counter -->
                    <Grid Grid.Column="0"
                          Grid.Row="0"
                          HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0"
                               Grid.Row="0"
                               Content="{xaml:Static root:MainWindowViewModel.FilesCounter_Label}"
                               ToolTip="{xaml:Static root:MainWindowViewModel.FilesCounter_Tooltip}"
                               Style="{StaticResource LabelStyle}" />
                        <TextBox Grid.Column="1"
                                 Grid.Row="0"
                                 VerticalAlignment="Center"
                                 Text="{Binding Counter, Mode=OneWay}"
                                 IsEnabled="False" />
                    </Grid>

                    <!-- Global buttons -->
                    <Grid Grid.Column="2"
                          Grid.Row="0"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{StaticResource SeparatorWidth}" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="{StaticResource SeparatorWidth}" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="{StaticResource SeparatorWidth}" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="{StaticResource SeparatorWidth}" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource SeparatorHeight}" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="{StaticResource SeparatorHeight}" />
                        </Grid.RowDefinitions>

                        <!-- Reset -->
                        <Button Grid.Column="1"
                                Grid.Row="1"
                                IsEnabled="{Binding CanReset, Mode=OneWay}"
                                Content="{xaml:Static root:MainWindowViewModel.ResetButton_Content}"
                                ToolTip="{xaml:Static root:MainWindowViewModel.ResetButton_Tooltip}"
                                Style="{StaticResource WarningButtonStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Click">
                                    <behaviors:InvokeCommandAction Command="{Binding ResetCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Button>

                        <!-- Clear -->
                        <Button Grid.Column="3"
                                Grid.Row="1"
                                IsEnabled="{Binding CanClear, Mode=OneWay}"
                                Content="{xaml:Static root:MainWindowViewModel.ClearButton_Content}"
                                ToolTip="{xaml:Static root:MainWindowViewModel.ClearButton_Tooltip}"
                                Style="{StaticResource WarningButtonStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Click">
                                    <behaviors:InvokeCommandAction Command="{Binding ClearCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Button>

                        <!-- Process -->
                        <Button Grid.Column="5"
                                Grid.Row="1"
                                IsEnabled="{Binding CanProcess, Mode=OneWay}"
                                Content="{xaml:Static root:MainWindowViewModel.ProcessButton_Content}"
                                ToolTip="{xaml:Static root:MainWindowViewModel.ProcessButton_Tooltip}"
                                Style="{StaticResource ContinueButtonStyle}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Click">
                                    <behaviors:InvokeCommandAction Command="{Binding ProcessCommand, Mode=OneWay}" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Button>
                    </Grid>
                </Grid>

            </Grid>
        </Grid>
    </Grid>
</Window>